#!/bin/sh
#
# Starts and configures the OpenSSH ssh-agent(1) utility. Kills ssh-
# agent if found running already. Uses my allsh utility to reconfigure
# any running shells with the new ssh-agent details.
#
# The author disclaims all copyrights and releases this script into the
# public domain.
shopt -s extglob
# timeout keys automatically (not compatible with older versions of OpenSSH)
key_timeout="-t 10h"
# the agent to hold the keys can be ssh-agent or pgp-agent
key_agent="ssh-agent"

# TODO portability problems of killall (e.g. Solaris?)
killall -u `id -un` "$key_agent"

if [ "$key_agent" == "ssh-agent" ]; then
    ssh-agent -s | grep -v echo > "$HOME/.ssh-agent"
elif [ "$key_agent" == "gpg-agent" ]; then
    gpg-agent --daemon --batch  --enable-ssh-support --batch  --write-env-file "$HOME/.ssh-agent"
else
    echo "error: $key_agent is not a valid agent !"; exit 1
fi
status=$?
if [ $status -ne 0 ]; then
    echo "error: non-zero exit starting $key_agent: status=$status" >&2
    exit $status
fi

# if have tty, try to read in keys (which could prompt for passwords)
if test -t 0; then
    . "$HOME/.ssh-agent"
    for private_key in $HOME/.ssh/id_!(*.pub) $HOME/.ssh/identity; do
        if [ -f "$private_key" ]; then
        ssh-add $key_timeout "$private_key"
        fi
    done
fi

# this takes some time, so do it after above...
allsh - < "$HOME/.ssh-agent"
